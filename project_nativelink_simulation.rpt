Info: Start Nativelink Simulation process

========= EDA Simulation Settings =====================

Sim Mode              :  Gate
Family                :  cycloneii
Quartus root          :  c:/altera/12.0sp2/quartus/bin/
Quartus sim root      :  c:/altera/12.0sp2/quartus/eda/sim_lib
Simulation Tool       :  modelsim-altera
Simulation Language   :  vhdl
Version               :  93
Simulation Mode       :  GUI
Sim Output File       :  project.vho
Sim SDF File       :  project_vhd.sdo
Sim dir               :  simulation\modelsim

=======================================================

Info: Starting NativeLink simulation with ModelSim-Altera software
Sourced NativeLink script c:/altera/12.0sp2/quartus/common/tcl/internal/nativelink/modelsim.tcl
Warning: File project_run_msim_gate_vhdl.do already exists - backing up current file as project_run_msim_gate_vhdl.do.bak11
error deleting "msim_transcript": permission denied
Error: NativeLink simulation flow was NOT successful



================The following additional information is provided to help identify the cause of error while running nativelink scripts=================
Nativelink TCL script failed with errorCode:  POSIX EACCES {permission denied}
Nativelink TCL script failed with errorInfo:  error deleting "msim_transcript": permission denied
    while executing
"file delete -force msim_transcript"
    invoked from within
"if [ catch {eval gen_msim_script args_hash} msim_do_file_name] {
	error "$::errorCode" "$::errorInfo"
    } elseif {$script_mode == 0} {
	post_message..."
    (procedure "launch_sim" line 109)
    invoked from within
"launch_sim launch_args_hash"
    ("eval" body line 1)
    invoked from within
"eval launch_sim launch_args_hash"
    invoked from within
"if [ info exists ::errorCode ] {
				set savedCode $::errorCode
				set savedInfo $::errorInfo
				error $result $savedInfo $savedCode
			} else {
			..."
    invoked from within
"if [catch {eval launch_sim launch_args_hash} result ] {
			set status 1
			if [ info exists ::errorCode ] {
				set savedCode $::errorCode
				set sav..."
    (procedure "run_sim" line 78)
    invoked from within
"run_sim run_sim_args_hash"
    invoked from within
"if [ info exists ::errorCode ] {
			set savedCode $::errorCode
			set savedInfo $::errorInfo
			error "$result" $savedInfo $savedCode
		} else {
			er..."
    (procedure "run_eda_simulation_tool" line 330)
    invoked from within
"run_eda_simulation_tool eda_opts_hash"
